-- 1. 创建 profiles 表，用于存储与用户关联的公开信息
CREATE TABLE public.profiles (
  id UUID PRIMARY KEY REFERENCES auth.users(id) ON DELETE CASCADE,
  username TEXT UNIQUE,
  full_name TEXT,
  avatar_url TEXT,
  updated_at TIMESTAMPTZ DEFAULT NOW()
);

-- 2. 为 profiles 表启用行级安全 (RLS)
ALTER TABLE public.profiles ENABLE ROW LEVEL SECURITY;

-- 3. 创建 profiles 表的安全策略
-- 允许所有用户读取所有 profiles (因为它们是公开的)
CREATE POLICY "Public profiles are viewable by everyone."
ON public.profiles FOR SELECT
USING (true);

-- 只允许用户创建或修改自己的 profile
CREATE POLICY "Users can insert their own profile."
ON public.profiles FOR INSERT
WITH CHECK (auth.uid() = id);

CREATE POLICY "Users can update own profile."
ON public.profiles FOR UPDATE
USING (auth.uid() = id)
WITH CHECK (auth.uid() = id);

-- 4. 创建 watchlist 表
CREATE TABLE public.watchlist (
  id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  user_id UUID NOT NULL REFERENCES auth.users(id) ON DELETE CASCADE,
  symbol TEXT NOT NULL,
  created_at TIMESTAMPTZ DEFAULT NOW(),
  -- 确保同一个用户不会重复添加同一个股票代码
  UNIQUE (user_id, symbol)
);

-- 5. 为 watchlist 表启用行级安全 (RLS)
ALTER TABLE public.watchlist ENABLE ROW LEVEL SECURITY;

-- 6. 创建 watchlist 表的安全策略
-- 只允许用户查看自己的 watchlist
CREATE POLICY "Users can view their own watchlist."
ON public.watchlist FOR SELECT
USING (auth.uid() = user_id);

-- 只允许用户向自己的 watchlist 中添加条目
CREATE POLICY "Users can insert into their own watchlist."
ON public.watchlist FOR INSERT
WITH CHECK (auth.uid() = user_id);

-- 只允许用户从自己的 watchlist 中删除条目
CREATE POLICY "Users can delete from their own watchlist."
ON public.watchlist FOR DELETE
USING (auth.uid() = user_id);

-- 7. 设置一个函数，在用户注册时自动创建对应的 profile
CREATE OR REPLACE FUNCTION public.handle_new_user()
RETURNS TRIGGER AS $$
BEGIN
  INSERT INTO public.profiles (id, username)
  VALUES (new.id, new.raw_user_meta_data->>'''username''');
  RETURN new;
END;
$$ LANGUAGE plpgsql SECURITY DEFINER;

-- 8. 创建一个触发器，在 auth.users 表有新用户插入时调用上述函数
CREATE TRIGGER on_auth_user_created
  AFTER INSERT ON auth.users
  FOR EACH ROW EXECUTE PROCEDURE public.handle_new_user();
